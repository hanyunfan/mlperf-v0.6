Beginning trial 1 of 1
Run vars: id 200404003648690925199
Gathering sys log on node001
--------------------------------------------------------------------------
[[12257,1],0]: A high-performance Open MPI point-to-point messaging module
was unable to find any relevant network interfaces:

Module: OpenFabrics (openib)
  Host: node001

Another transport will be used instead, although this may result in
lower performance.

NOTE: You can disable this warning by setting the MCA parameter
btl_base_warn_component_unused to 0.
--------------------------------------------------------------------------
:::MLL 1585978641.667 submission_benchmark: {"metadata": {"lineno": 226, "file": "mlperf_log_utils.py"}, "value": "resnet"}
:::MLL 1585978641.668 submission_org: {"metadata": {"lineno": 231, "file": "mlperf_log_utils.py"}, "value": "NVIDIA"}
WARNING: Log validation: Key "submission_division" is not in known resnet keys.
:::MLL 1585978641.669 submission_division: {"metadata": {"lineno": 235, "file": "mlperf_log_utils.py"}, "value": "closed"}
:::MLL 1585978641.671 submission_status: {"metadata": {"lineno": 239, "file": "mlperf_log_utils.py"}, "value": "onprem"}
:::MLL 1585978641.672 submission_platform: {"metadata": {"lineno": 243, "file": "mlperf_log_utils.py"}, "value": "1xPowerEdge R7525"}
:::MLL 1585978641.673 submission_entry: {"metadata": {"lineno": 247, "file": "mlperf_log_utils.py"}, "value": "{'power': 'N/A', 'os': '\\\\S / ', 'compilers': 'gcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609', 'hardware': 'PowerEdge R7525', 'interconnect': ' ', 'framework': 'MXNet NVIDIA Release 19.05', 'nodes': \"{'num_network_cards': '0', 'sys_mem_size': '251 GB', 'notes': '', 'sys_storage_size': '1x 931.5G', 'num_nodes': '1', 'network_card': '', 'cpu_accel_interconnect': 'QPI', 'accelerator': 'Tesla V100-PCIE-32GB', 'cpu': '2x AMD EPYC 7502 32-Core Processor', 'num_cores': '64', 'sys_storage_type': 'NVMe SSD', 'num_vcpus': '64', 'num_accelerators': '3'}\", 'notes': 'N/A', 'libraries': \"{'cudnn_version': '7.6.0.64', 'cublas_version': '10.2.0.163', 'trt_version': '5.1.5.0', 'dali_version': '0.9.1', 'cuda_driver_version': '418.67', 'mofed_version': '4.0-0', 'container_base': 'Ubuntu-16.04', 'cuda_version': '10.1.163', 'openmpi_version': '3.1.3', 'nccl_version': '2.4.6'}\"}"}
:::MLL 1585978641.674 submission_poc_name: {"metadata": {"lineno": 251, "file": "mlperf_log_utils.py"}, "value": "Paulius Micikevicius"}
:::MLL 1585978641.675 submission_poc_email: {"metadata": {"lineno": 255, "file": "mlperf_log_utils.py"}, "value": "pauliusm@nvidia.com"}
Clearing cache on node001
:::MLL 1585978651.966 cache_clear: {"metadata": {"file": "<string>", "lineno": 1}, "value": true}

Launching user script on master node:
[1,0]<stdout>:STARTING TIMING RUN AT 2020-04-04 05:37:32 AM
[1,1]<stdout>:STARTING TIMING RUN AT 2020-04-04 05:37:32 AM
[1,0]<stdout>:running benchmark
[1,1]<stdout>:running benchmark
[1,2]<stdout>:STARTING TIMING RUN AT 2020-04-04 05:37:32 AM
[1,2]<stdout>:running benchmark
--------------------------------------------------------------------------
[[12262,1],1]: A high-performance Open MPI point-to-point messaging module
was unable to find any relevant network interfaces:

Module: OpenFabrics (openib)
  Host: node001

Another transport will be used instead, although this may result in
lower performance.

NOTE: You can disable this warning by setting the MCA parameter
btl_base_warn_component_unused to 0.
--------------------------------------------------------------------------
[1,1]<stdout>::::MLL 1585978654.727 init_start: {"value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83}}
[1,2]<stdout>::::MLL 1585978654.727 init_start: {"value": null, "metadata": {"lineno": 83, "file": "train_imagenet.py"}}
[1,0]<stdout>::::MLL 1585978654.727 init_start: {"metadata": {"file": "train_imagenet.py", "lineno": 83}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_initial_shape" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.546 model_hp_initial_shape: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 266}, "value": [4, 224, 224]}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.549 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.550 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.552 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.554 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.555 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.557 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.558 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.560 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.561 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.562 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.564 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.565 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.567 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.568 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.570 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_shorcut_add" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.571 model_hp_shorcut_add: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 192}, "value": null}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_final_shape" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.572 model_hp_final_shape: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 309}, "value": 1000}
[1,0]<stdout>:WARNING: Log validation: Key "model_hp_loss_fn" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978658.573 model_hp_loss_fn: {"metadata": {"file": "symbols/resnet-v1b-normconv-fl.py", "lineno": 320}, "value": "categorical_cross_entropy"}
[1,0]<stdout>::::MLL 1585978658.576 model_bn_span: {"metadata": {"file": "common/dali.py", "lineno": 229}, "value": 384}
[1,2]<stdout>:WARNING: `nvJPEGDecoderRandomCrop` is now deprecated. Use `ImageDecoderRandomCrop` instead
[1,0]<stdout>:WARNING: `nvJPEGDecoderRandomCrop` is now deprecated. Use `ImageDecoderRandomCrop` instead
[1,1]<stdout>:WARNING: `nvJPEGDecoderRandomCrop` is now deprecated. Use `ImageDecoderRandomCrop` instead
[1,2]<stdout>:WARNING: `nvJPEGDecoder` is now deprecated. Use `ImageDecoder` instead
[1,0]<stdout>:WARNING: `nvJPEGDecoder` is now deprecated. Use `ImageDecoder` instead
[1,1]<stdout>:WARNING: `nvJPEGDecoder` is now deprecated. Use `ImageDecoder` instead
[node001:00127] 2 more processes have sent help message help-mpi-btl-base.txt / btl:no-nics
[node001:00127] Set MCA parameter "orte_base_help_aggregate" to 0 to see all help / error messages
[1,0]<stdout>::::MLL 1585978662.084 init_stop: {"metadata": {"file": "train_imagenet.py", "lineno": 187}, "value": null}
[1,0]<stdout>::::MLL 1585978662.085 run_start: {"metadata": {"file": "train_imagenet.py", "lineno": 190}, "value": null}
[1,2]<stderr>:2020-04-04 05:37:42,084 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=384, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_cache_size=0, dali_nvjpeg_memory_padding=256, dali_prefetch_queue=8, dali_roi_decode=True, dali_threads=3, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, log='', logging_dir='logs', lr=5.0, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-normconv-fl', num_classes=1000, num_epochs=72, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24223, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=8, warmup_strategy='linear', wd=0.0002)
[1,0]<stderr>:2020-04-04 05:37:42,084 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=384, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_cache_size=0, dali_nvjpeg_memory_padding=256, dali_prefetch_queue=8, dali_roi_decode=True, dali_threads=3, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, log='', logging_dir='logs', lr=5.0, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-normconv-fl', num_classes=1000, num_epochs=72, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=10313, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=8, warmup_strategy='linear', wd=0.0002)
[1,1]<stderr>:2020-04-04 05:37:42,085 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=384, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_cache_size=0, dali_nvjpeg_memory_padding=256, dali_prefetch_queue=8, dali_roi_decode=True, dali_threads=3, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', epoch_size=0, eval_offset=3, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, log='', logging_dir='logs', lr=5.0, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-normconv-fl', num_classes=1000, num_epochs=72, num_examples=1281167, num_layers=50, optimizer='sgdwfastlars', pooling_layout='NHWC', profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15201, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=8, warmup_strategy='linear', wd=0.0002)
[1,0]<stdout>::::MLL 1585978664.503 opt_base_learning_rate: {"metadata": {"file": "common/fit.py", "lineno": 651}, "value": 5.0}
[1,0]<stdout>::::MLL 1585978664.504 opt_learning_rate_warmup_epochs: {"metadata": {"file": "common/fit.py", "lineno": 652}, "value": 8}
[1,0]<stdout>::::MLL 1585978664.504 lars_opt_learning_rate_decay_steps: {"metadata": {"file": "common/fit.py", "lineno": 662}, "value": 71232}
[1,0]<stdout>::::MLL 1585978664.505 lars_opt_learning_rate_decay_poly_power: {"metadata": {"file": "common/fit.py", "lineno": 698}, "value": 2}
[1,0]<stdout>::::MLL 1585978664.505 lars_opt_end_learning_rate: {"metadata": {"file": "common/fit.py", "lineno": 699}, "value": 0.0001}
[1,0]<stdout>::::MLL 1585978664.506 opt_name: {"metadata": {"file": "common/fit.py", "lineno": 1075}, "value": "lars"}
[1,0]<stdout>::::MLL 1585978664.506 lars_epsilon: {"metadata": {"file": "common/fit.py", "lineno": 1077}, "value": 0}
[1,0]<stdout>:WARNING: Log validation: Key "lars_opt_weight_decay" is not in known resnet keys.
[1,0]<stdout>::::MLL 1585978664.507 lars_opt_weight_decay: {"metadata": {"file": "common/fit.py", "lineno": 1079}, "value": 0.0002}
[1,0]<stdout>:using wd on conv0_weight
[1,0]<stdout>:skipping wd on bn0_gamma
[1,0]<stdout>:skipping wd on bn0_beta
[1,0]<stdout>:using wd on stage1_unit1_conv1_weight
[1,0]<stdout>:skipping wd on stage1_unit1_bn1_gamma
[1,0]<stdout>:skipping wd on stage1_unit1_bn1_beta
[1,0]<stdout>:using wd on stage1_unit1_conv2_weight
[1,0]<stdout>:skipping wd on stage1_unit1_bn2_gamma
[1,0]<stdout>:skipping wd on stage1_unit1_bn2_beta
[1,0]<stdout>:using wd on stage1_unit1_conv3_weight
[1,0]<stdout>:skipping wd on stage1_unit1_bn3_gamma
[1,0]<stdout>:skipping wd on stage1_unit1_bn3_beta
[1,0]<stdout>:using wd on stage1_unit1_conv1sc_weight
[1,0]<stdout>:skipping wd on stage1_unit1_bn_sc_gamma
[1,0]<stdout>:skipping wd on stage1_unit1_bn_sc_beta
[1,0]<stdout>:using wd on stage1_unit2_conv1_weight
[1,0]<stdout>:skipping wd on stage1_unit2_bn1_gamma
[1,0]<stdout>:skipping wd on stage1_unit2_bn1_beta
[1,0]<stdout>:using wd on stage1_unit2_conv2_weight
[1,0]<stdout>:skipping wd on stage1_unit2_bn2_gamma
[1,0]<stdout>:skipping wd on stage1_unit2_bn2_beta
[1,0]<stdout>:using wd on stage1_unit2_conv3_weight
[1,0]<stdout>:skipping wd on stage1_unit2_bn3_gamma
[1,0]<stdout>:skipping wd on stage1_unit2_bn3_beta
[1,0]<stdout>:using wd on stage1_unit3_conv1_weight
[1,0]<stdout>:skipping wd on stage1_unit3_bn1_gamma
[1,0]<stdout>:skipping wd on stage1_unit3_bn1_beta
[1,0]<stdout>:using wd on stage1_unit3_conv2_weight
[1,0]<stdout>:skipping wd on stage1_unit3_bn2_gamma
[1,0]<stdout>:skipping wd on stage1_unit3_bn2_beta
[1,0]<stdout>:using wd on stage1_unit3_conv3_weight
[1,0]<stdout>:skipping wd on stage1_unit3_bn3_gamma
[1,0]<stdout>:skipping wd on stage1_unit3_bn3_beta
[1,0]<stdout>:using wd on stage2_unit1_conv1_weight
[1,0]<stdout>:skipping wd on stage2_unit1_bn1_gamma
[1,0]<stdout>:skipping wd on stage2_unit1_bn1_beta
[1,0]<stdout>:using wd on stage2_unit1_conv2_weight
[1,0]<stdout>:skipping wd on stage2_unit1_bn2_gamma
[1,0]<stdout>:skipping wd on stage2_unit1_bn2_beta
[1,0]<stdout>:using wd on stage2_unit1_conv3_weight
[1,0]<stdout>:skipping wd on stage2_unit1_bn3_gamma
[1,0]<stdout>:skipping wd on stage2_unit1_bn3_beta
[1,0]<stdout>:using wd on stage2_unit1_conv1sc_weight
[1,0]<stdout>:skipping wd on stage2_unit1_bn_sc_gamma
[1,0]<stdout>:skipping wd on stage2_unit1_bn_sc_beta
[1,0]<stdout>:using wd on stage2_unit2_conv1_weight
[1,0]<stdout>:skipping wd on stage2_unit2_bn1_gamma
[1,0]<stdout>:skipping wd on stage2_unit2_bn1_beta
[1,0]<stdout>:using wd on stage2_unit2_conv2_weight
[1,0]<stdout>:skipping wd on stage2_unit2_bn2_gamma
[1,0]<stdout>:skipping wd on stage2_unit2_bn2_beta
[1,0]<stdout>:using wd on stage2_unit2_conv3_weight
[1,0]<stdout>:skipping wd on stage2_unit2_bn3_gamma
[1,0]<stdout>:skipping wd on stage2_unit2_bn3_beta
[1,0]<stdout>:using wd on stage2_unit3_conv1_weight
[1,0]<stdout>:skipping wd on stage2_unit3_bn1_gamma
[1,0]<stdout>:skipping wd on stage2_unit3_bn1_beta
[1,0]<stdout>:using wd on stage2_unit3_conv2_weight
[1,0]<stdout>:skipping wd on stage2_unit3_bn2_gamma
[1,0]<stdout>:skipping wd on stage2_unit3_bn2_beta
[1,0]<stdout>:using wd on stage2_unit3_conv3_weight
[1,0]<stdout>:skipping wd on stage2_unit3_bn3_gamma
[1,0]<stdout>:skipping wd on stage2_unit3_bn3_beta
[1,0]<stdout>:using wd on stage2_unit4_conv1_weight
[1,0]<stdout>:skipping wd on stage2_unit4_bn1_gamma
[1,0]<stdout>:skipping wd on stage2_unit4_bn1_beta
[1,0]<stdout>:using wd on stage2_unit4_conv2_weight
[1,0]<stdout>:skipping wd on stage2_unit4_bn2_gamma
[1,0]<stdout>:skipping wd on stage2_unit4_bn2_beta
[1,0]<stdout>:using wd on stage2_unit4_conv3_weight
[1,0]<stdout>:skipping wd on stage2_unit4_bn3_gamma
[1,0]<stdout>:skipping wd on stage2_unit4_bn3_beta
[1,0]<stdout>:using wd on stage3_unit1_conv1_weight
[1,0]<stdout>:skipping wd on stage3_unit1_bn1_gamma
[1,0]<stdout>:skipping wd on stage3_unit1_bn1_beta
[1,0]<stdout>:using wd on stage3_unit1_conv2_weight
[1,0]<stdout>:skipping wd on stage3_unit1_bn2_gamma
[1,0]<stdout>:skipping wd on stage3_unit1_bn2_beta
[1,0]<stdout>:using wd on stage3_unit1_conv3_weight
[1,0]<stdout>:skipping wd on stage3_unit1_bn3_gamma
[1,0]<stdout>:skipping wd on stage3_unit1_bn3_beta
[1,0]<stdout>:using wd on stage3_unit1_conv1sc_weight
[1,0]<stdout>:skipping wd on stage3_unit1_bn_sc_gamma
[1,0]<stdout>:skipping wd on stage3_unit1_bn_sc_beta
[1,0]<stdout>:using wd on stage3_unit2_conv1_weight
[1,0]<stdout>:skipping wd on stage3_unit2_bn1_gamma
[1,0]<stdout>:skipping wd on stage3_unit2_bn1_beta
[1,0]<stdout>:using wd on stage3_unit2_conv2_weight
[1,0]<stdout>:skipping wd on stage3_unit2_bn2_gamma
[1,0]<stdout>:skipping wd on stage3_unit2_bn2_beta
[1,0]<stdout>:using wd on stage3_unit2_conv3_weight
[1,0]<stdout>:skipping wd on stage3_unit2_bn3_gamma
[1,0]<stdout>:skipping wd on stage3_unit2_bn3_beta
[1,0]<stdout>:using wd on stage3_unit3_conv1_weight
[1,0]<stdout>:skipping wd on stage3_unit3_bn1_gamma
[1,0]<stdout>:skipping wd on stage3_unit3_bn1_beta
[1,0]<stdout>:using wd on stage3_unit3_conv2_weight
[1,0]<stdout>:skipping wd on stage3_unit3_bn2_gamma
[1,0]<stdout>:skipping wd on stage3_unit3_bn2_beta
[1,0]<stdout>:using wd on stage3_unit3_conv3_weight
[1,0]<stdout>:skipping wd on stage3_unit3_bn3_gamma
[1,0]<stdout>:skipping wd on stage3_unit3_bn3_beta
[1,0]<stdout>:using wd on stage3_unit4_conv1_weight
[1,0]<stdout>:skipping wd on stage3_unit4_bn1_gamma
[1,0]<stdout>:skipping wd on stage3_unit4_bn1_beta
[1,0]<stdout>:using wd on stage3_unit4_conv2_weight
[1,0]<stdout>:skipping wd on stage3_unit4_bn2_gamma
[1,0]<stdout>:skipping wd on stage3_unit4_bn2_beta
[1,0]<stdout>:using wd on stage3_unit4_conv3_weight
[1,0]<stdout>:skipping wd on stage3_unit4_bn3_gamma
[1,0]<stdout>:skipping wd on stage3_unit4_bn3_beta
[1,0]<stdout>:using wd on stage3_unit5_conv1_weight
[1,0]<stdout>:skipping wd on stage3_unit5_bn1_gamma
[1,0]<stdout>:skipping wd on stage3_unit5_bn1_beta
[1,0]<stdout>:using wd on stage3_unit5_conv2_weight
[1,0]<stdout>:skipping wd on stage3_unit5_bn2_gamma
[1,0]<stdout>:skipping wd on stage3_unit5_bn2_beta
[1,0]<stdout>:using wd on stage3_unit5_conv3_weight
[1,0]<stdout>:skipping wd on stage3_unit5_bn3_gamma
[1,0]<stdout>:skipping wd on stage3_unit5_bn3_beta
[1,0]<stdout>:using wd on stage3_unit6_conv1_weight
[1,0]<stdout>:skipping wd on stage3_unit6_bn1_gamma
[1,0]<stdout>:skipping wd on stage3_unit6_bn1_beta
[1,0]<stdout>:using wd on stage3_unit6_conv2_weight
[1,0]<stdout>:skipping wd on stage3_unit6_bn2_gamma
[1,0]<stdout>:skipping wd on stage3_unit6_bn2_beta
[1,0]<stdout>:using wd on stage3_unit6_conv3_weight
[1,0]<stdout>:skipping wd on stage3_unit6_bn3_gamma
[1,0]<stdout>:skipping wd on stage3_unit6_bn3_beta
[1,0]<stdout>:using wd on stage4_unit1_conv1_weight
[1,0]<stdout>:skipping wd on stage4_unit1_bn1_gamma
[1,0]<stdout>:skipping wd on stage4_unit1_bn1_beta
[1,0]<stdout>:using wd on stage4_unit1_conv2_weight
[1,0]<stdout>:skipping wd on stage4_unit1_bn2_gamma
[1,0]<stdout>:skipping wd on stage4_unit1_bn2_beta
[1,0]<stdout>:using wd on stage4_unit1_conv3_weight
[1,0]<stdout>:skipping wd on stage4_unit1_bn3_gamma
[1,0]<stdout>:skipping wd on stage4_unit1_bn3_beta
[1,0]<stdout>:using wd on stage4_unit1_conv1sc_weight
[1,0]<stdout>:skipping wd on stage4_unit1_bn_sc_gamma
[1,0]<stdout>:skipping wd on stage4_unit1_bn_sc_beta
[1,0]<stdout>:using wd on stage4_unit2_conv1_weight
[1,0]<stdout>:skipping wd on stage4_unit2_bn1_gamma
[1,0]<stdout>:skipping wd on stage4_unit2_bn1_beta
[1,0]<stdout>:using wd on stage4_unit2_conv2_weight
[1,0]<stdout>:skipping wd on stage4_unit2_bn2_gamma
[1,0]<stdout>:skipping wd on stage4_unit2_bn2_beta
[1,0]<stdout>:using wd on stage4_unit2_conv3_weight
[1,0]<stdout>:skipping wd on stage4_unit2_bn3_gamma
[1,0]<stdout>:skipping wd on stage4_unit2_bn3_beta
[1,0]<stdout>:using wd on stage4_unit3_conv1_weight
[1,0]<stdout>:skipping wd on stage4_unit3_bn1_gamma
[1,0]<stdout>:skipping wd on stage4_unit3_bn1_beta
[1,0]<stdout>:using wd on stage4_unit3_conv2_weight
[1,0]<stdout>:skipping wd on stage4_unit3_bn2_gamma
[1,0]<stdout>:skipping wd on stage4_unit3_bn2_beta
[1,0]<stdout>:using wd on stage4_unit3_conv3_weight
[1,0]<stdout>:skipping wd on stage4_unit3_bn3_gamma
[1,0]<stdout>:skipping wd on stage4_unit3_bn3_beta
[1,0]<stdout>:using wd on fc1_weight
[1,0]<stdout>:using wd on fc1_bias
[1,0]<stdout>::::MLL 1585978664.509 global_batch_size: {"metadata": {"file": "common/fit.py", "lineno": 1112}, "value": 1152}
[1,0]<stderr>:2020-04-04 05:37:44,509 Node[0] Already bound, ignoring bind()
[1,0]<stdout>::::MLL 1585978664.510 block_start: {"metadata": {"file": "common/fit.py", "first_epoch_num": 1, "lineno": 888, "epoch_count": 4}, "value": null}
[1,0]<stdout>::::MLL 1585978664.510 epoch_start: {"metadata": {"epoch_num": 1, "file": "common/fit.py", "lineno": 893}, "value": null}
[1,0]<stderr>:/workspace/common/fit.py:858: UserWarning: Parameters already initialized and force_init=False. init_params call ignored.
[1,0]<stderr>:  allow_missing=allow_missing, force_init=force_init)
[1,0]<stderr>:/workspace/common/fit.py:860: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.0008680555555555555 vs. 0.0026041666666666665). Is this intended?
[1,0]<stderr>:  optimizer_params=optimizer_params)
[1,0]<stderr>:Traceback (most recent call last):
[1,0]<stderr>:  File "train_imagenet.py", line 191, in <module>
[1,0]<stderr>:    fit.fit(args, kv, model, initializer, lambda_fnc_dali_get_rec_iter, devs, arg_params, aux_params)
[1,0]<stderr>:  File "/workspace/common/fit.py", line 1140, in fit
[1,0]<stderr>:    monitor=None)
[1,0]<stderr>:  File "/workspace/common/fit.py", line 910, in mlperf_fit
[1,0]<stderr>:    pre_sliced=True)
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/module/module.py", line 775, in update_metric
[1,0]<stderr>:    self._exec_group.update_metric(eval_metric, labels, pre_sliced, label_pads)
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/module/executor_group.py", line 664, in update_metric
[1,0]<stderr>:    eval_metric.update_dict(labels_, preds)
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 350, in update_dict
[1,0]<stderr>:    metric.update_dict(labels, preds)
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 133, in update_dict
[1,0]<stderr>:    self.update(label, pred)
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 496, in update
[1,0]<stderr>:    pred_label = pred_label.asnumpy().astype('int32')
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/ndarray/ndarray.py", line 1995, in asnumpy
[1,0]<stderr>:    ctypes.c_size_t(data.size)))
[1,0]<stderr>:  File "/opt/mxnet/python/mxnet/base.py", line 251, in check_call
[1,0]<stderr>:    raise MXNetError(py_str(_LIB.MXGetLastError()))
[1,0]<stderr>:mxnet.base.MXNetError: [05:37:44] src/operator/nn/./cudnn/cudnn_convolution-inl.h:1021: Failed to get backprop-to-filter convolution algorithm 1 with workspace size of 536870912 bytes, please consider reducing batch/model size or increasing the workspace size
[1,0]<stderr>:Stack trace:
[1,0]<stderr>:  [bt] (0) /usr/local/lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x32) [0x7fffbf2611b2]
[1,0]<stderr>:  [bt] (1) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::CuDNNAlgoSetter(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t, mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)+0x1811) [0x7fffc2c9a9a1]
[1,0]<stderr>:  [bt] (2) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::SelectAlgo(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t)::{lambda(mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)#1}::operator()(mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*) const+0xe9f) [0x7fffc2cac63f]
[1,0]<stderr>:  [bt] (3) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNAlgoReg<mxnet::op::ConvolutionParam>::FindOrElseRegister(mxnet::op::ConvolutionParam const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t, cudnnDataType_t, int, bool, mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*, std::function<void (mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)> const&)+0x8d2) [0x7fffc2caee22]
[1,0]<stderr>:  [bt] (4) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::SelectAlgo(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t)+0x1f1) [0x7fffc2cb0111]
[1,0]<stderr>:  [bt] (5) /usr/local/lib/libmxnet.so(+0x48d05d2) [0x7fffc2c665d2]
[1,0]<stderr>:  [bt] (6) /usr/local/lib/libmxnet.so(void mxnet::op::ConvolutionCompute<mshadow::gpu>(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob,[1,0]<stderr>: std::allocator<mxnet::TBlob> > const&)+0xd43) [0x7fffc2c69823]
[1,0]<stderr>:  [bt] (7) /usr/local/lib/libmxnet.so(mxnet::exec::FComputeExecutor::Run(mxnet::RunContext, bool)+0x76) [0x7fffc2601da6]
[1,0]<stderr>:  [bt] (8) /usr/local/lib/libmxnet.so(+0x42226f3) [0x7fffc25b86f3]
[1,0]<stderr>:
[1,0]<stderr>:
[1,2]<stderr>:2020-04-04 05:37:44,782 Node[2] Already bound, ignoring bind()
[1,1]<stderr>:2020-04-04 05:37:44,817 Node[1] Already bound, ignoring bind()
[1,2]<stderr>:/workspace/common/fit.py:858: UserWarning: Parameters already initialized and force_init=False. init_params call ignored.
[1,2]<stderr>:  allow_missing=allow_missing, force_init=force_init)
[1,2]<stderr>:/workspace/common/fit.py:860: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.0008680555555555555 vs. 0.0026041666666666665). Is this intended?
[1,2]<stderr>:  optimizer_params=optimizer_params)
[1,2]<stderr>:Traceback (most recent call last):
[1,2]<stderr>:  File "train_imagenet.py", line 191, in <module>
[1,2]<stderr>:    fit.fit(args, kv, model, initializer, lambda_fnc_dali_get_rec_iter, devs, arg_params, aux_params)
[1,2]<stderr>:  File "/workspace/common/fit.py", line 1140, in fit
[1,2]<stderr>:    monitor=None)
[1,2]<stderr>:  File "/workspace/common/fit.py", line 910, in mlperf_fit
[1,2]<stderr>:    pre_sliced=True)
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/module/module.py", line 775, in update_metric
[1,2]<stderr>:    self._exec_group.update_metric(eval_metric, labels, pre_sliced, label_pads)
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/module/executor_group.py", line 664, in update_metric
[1,2]<stderr>:    eval_metric.update_dict(labels_, preds)
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 350, in update_dict
[1,2]<stderr>:    metric.update_dict(labels, preds)
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 133, in update_dict
[1,2]<stderr>:    self.update(label, pred)
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 496, in update
[1,2]<stderr>:    pred_label = pred_label.asnumpy().astype('int32')
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/ndarray/ndarray.py", line 1995, in asnumpy
[1,2]<stderr>:    ctypes.c_size_t(data.size)))
[1,2]<stderr>:  File "/opt/mxnet/python/mxnet/base.py", line 251, in check_call
[1,2]<stderr>:    raise MXNetError(py_str(_LIB.MXGetLastError()))
[1,2]<stderr>:mxnet.base.MXNetError: [05:37:44] src/operator/nn/./cudnn/cudnn_convolution-inl.h:1021: Failed to get backprop-to-filter convolution algorithm 1 with workspace size of 536870912 bytes, please consider reducing batch/model size or increasing the workspace size
[1,2]<stderr>:Stack trace:
[1,2]<stderr>:  [bt] (0) /usr/local/lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x32) [0x7fffbf2611b2]
[1,2]<stderr>:  [bt] (1) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::CuDNNAlgoSetter(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t, mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)+0x1811) [0x7fffc2c9a9a1]
[1,2]<stderr>:  [bt] (2) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::SelectAlgo(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t)::{lambda(mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)#1}::operator()(mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*) const+0xe9f) [0x7fffc2cac63f]
[1,2]<stderr>:  [bt] (3) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNAlgoReg<mxnet::op::ConvolutionParam>::FindOrElseRegister(mxnet::op::ConvolutionParam const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t, cudnnDataType_t, int, bool, mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*, std::function<void (mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)> const&)+0x8d2) [0x7fffc2caee22]
[1,2]<stderr>:  [bt] (4) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::SelectAlgo(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t)+0x1f1) [0x7fffc2cb0111]
[1,2]<stderr>:  [bt] (5) /usr/local/lib/libmxnet.so(+0x48d05d2) [0x7fffc2c665d2]
[1,2]<stderr>:  [bt] (6) /usr/local/lib/libmxnet.so(void mxnet::op::ConvolutionCompute<mshadow::gpu>(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob,[1,2]<stderr>: std::allocator<mxnet::TBlob> > const&)+0xd43) [0x7fffc2c69823]
[1,2]<stderr>:  [bt] (7) /usr/local/lib/libmxnet.so(mxnet::exec::FComputeExecutor::Run(mxnet::RunContext, bool)+0x76) [0x7fffc2601da6]
[1,2]<stderr>:  [bt] (8) /usr/local/lib/libmxnet.so(+0x42226f3) [0x7fffc25b86f3]
[1,2]<stderr>:
[1,2]<stderr>:
[1,1]<stderr>:/workspace/common/fit.py:858: UserWarning: Parameters already initialized and force_init=False. init_params call ignored.
[1,1]<stderr>:  allow_missing=allow_missing, force_init=force_init)
[1,1]<stderr>:/workspace/common/fit.py:860: UserWarning: Optimizer created manually outside Module but rescale_grad is not normalized to 1.0/batch_size/num_workers (0.0008680555555555555 vs. 0.0026041666666666665). Is this intended?
[1,1]<stderr>:  optimizer_params=optimizer_params)
[1,1]<stderr>:Traceback (most recent call last):
[1,1]<stderr>:  File "train_imagenet.py", line 191, in <module>
[1,1]<stderr>:    fit.fit(args, kv, model, initializer, lambda_fnc_dali_get_rec_iter, devs, arg_params, aux_params)
[1,1]<stderr>:  File "/workspace/common/fit.py", line 1140, in fit
[1,1]<stderr>:    monitor=None)
[1,1]<stderr>:  File "/workspace/common/fit.py", line 910, in mlperf_fit
[1,1]<stderr>:    pre_sliced=True)
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/module/module.py", line 775, in update_metric
[1,1]<stderr>:    self._exec_group.update_metric(eval_metric, labels, pre_sliced, label_pads)
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/module/executor_group.py", line 664, in update_metric
[1,1]<stderr>:    eval_metric.update_dict(labels_, preds)
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 350, in update_dict
[1,1]<stderr>:    metric.update_dict(labels, preds)
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 133, in update_dict
[1,1]<stderr>:    self.update(label, pred)
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/metric.py", line 496, in update
[1,1]<stderr>:    pred_label = pred_label.asnumpy().astype('int32')
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/ndarray/ndarray.py", line 1995, in asnumpy
[1,1]<stderr>:    ctypes.c_size_t(data.size)))
[1,1]<stderr>:  File "/opt/mxnet/python/mxnet/base.py", line 251, in check_call
[1,1]<stderr>:    raise MXNetError(py_str(_LIB.MXGetLastError()))
[1,1]<stderr>:mxnet.base.MXNetError: [05:37:44] src/operator/nn/./cudnn/cudnn_convolution-inl.h:1021: Failed to get backprop-to-filter convolution algorithm 1 with workspace size of 536870912 bytes, please consider reducing batch/model size or increasing the workspace size
[1,1]<stderr>:Stack trace:
[1,1]<stderr>:  [bt] (0) /usr/local/lib/libmxnet.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x32) [0x7fffbf2611b2]
[1,1]<stderr>:  [bt] (1) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::CuDNNAlgoSetter(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t, mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)+0x1811) [0x7fffc2c9a9a1]
[1,1]<stderr>:  [bt] (2) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::SelectAlgo(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t)::{lambda(mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)#1}::operator()(mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*) const+0xe9f) [0x7fffc2cac63f]
[1,1]<stderr>:  [bt] (3) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNAlgoReg<mxnet::op::ConvolutionParam>::FindOrElseRegister(mxnet::op::ConvolutionParam const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t, cudnnDataType_t, int, bool, mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*, std::function<void (mxnet::op::CuDNNAlgo<cudnnConvolutionFwdAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdDataAlgo_t>*, mxnet::op::CuDNNAlgo<cudnnConvolutionBwdFilterAlgo_t>*)> const&)+0x8d2) [0x7fffc2caee22]
[1,1]<stderr>:  [bt] (4) /usr/local/lib/libmxnet.so(mxnet::op::CuDNNConvolutionOp<mshadow::half::half_t>::SelectAlgo(mxnet::RunContext const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, std::vector<nnvm::TShape, std::allocator<nnvm::TShape> > const&, cudnnDataType_t, cudnnDataType_t)+0x1f1) [0x7fffc2cb0111]
[1,1]<stderr>:  [bt] (5) /usr/local/lib/libmxnet.so(+0x48d05d2) [0x7fffc2c665d2]
[1,1]<stderr>:  [bt] (6) /usr/local/lib/libmxnet.so(void mxnet::op::ConvolutionCompute<mshadow::gpu>(nnvm::NodeAttrs const&, mxnet::OpContext const&, std::vector<mxnet::TBlob, std::allocator<mxnet::TBlob> > const&, std::vector<mxnet::OpReqType, std::allocator<mxnet::OpReqType> > const&, std::vector<mxnet::TBlob,[1,1]<stderr>: std::allocator<mxnet::TBlob> > const&)+0xd43) [0x7fffc2c69823]
[1,1]<stderr>:  [bt] (7) /usr/local/lib/libmxnet.so(mxnet::exec::FComputeExecutor::Run(mxnet::RunContext, bool)+0x76) [0x7fffc2601da6]
[1,1]<stderr>:  [bt] (8) /usr/local/lib/libmxnet.so(+0x42226f3) [0x7fffc25b86f3]
[1,1]<stderr>:
[1,1]<stderr>:
--------------------------------------------------------------------------
Primary job  terminated normally, but 1 process returned
a non-zero exit code. Per user-direction, the job has been aborted.
--------------------------------------------------------------------------
--------------------------------------------------------------------------
mpirun detected that one or more processes exited with non-zero status, thus causing
the job to be terminated. The first process to do so was:

  Process name: [[12262,1],2]
  Exit code:    1
--------------------------------------------------------------------------
